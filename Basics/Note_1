CLASS AND OBJECTS

//Abstract datatype :
    1. Stores some information
    2. Designated functions to manipulate the information
    3. For instance, stack : last-in, first-out, push(), pop()

Separate the (private) implementation from the (public) specification

//Class >>>>>>> 1. Template for a data type
                2. How data is stored
                3. Hoe public functions manipulate data

//Object >>>>>  Concrete instance of template


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

A point has cooridnates (x , y)
  1. __init__() intializes internal values x,y
  2. First parameter is always self
  3. Here, by default a point is at ( 0, 0)

class Point:
  def __init__(self, a=0, b=0):
      self.x = a
      self.y = b


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

//Special functions :

1. __init__() >> Constructor

2. __str__() >> Convert object to string

  > str(o) == o.__str()__
  > implicitly invoked by print()

3. __add__() 
  > implicitly invoked by +

4. __multi__() 
  > implicitly invoked by *

3. __le__() 
  > implicitly invoked by <=
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
