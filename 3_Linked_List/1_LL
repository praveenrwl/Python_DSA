// CODE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def insert(self, value):
        new_node = Node(value)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node
        print(f"Inserted {value} into the linked list.")

    def delete(self, value):
        if self.head is None:
            print("Linked list is empty.")
            return
        if self.head.data == value:
            self.head = self.head.next
            print(f"Deleted {value} from the linked list.")
            return
        current = self.head
        while current.next and current.next.data != value:
            current = current.next
        if current.next:
            current.next = current.next.next
            print(f"Deleted {value} from the linked list.")
        else:
            print(f"{value} not found in the linked list.")

    def display(self):
        current = self.head
        if current is None:
            print("Linked list is empty.")
            return
        print("Linked List:", end=" ")
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")


def main():
    linked_list = LinkedList()
    while True:
        print("\nLinked List Operations:")
        print("1. Insert\n2. Delete\n3. Display\n4. Exit")
        try:
            op = int(input("Choose an operation: "))
            if op == 1:
                value = int(input("Enter value to insert: "))
                linked_list.insert(value)
            elif op == 2:
                value = int(input("Enter value to delete: "))
                linked_list.delete(value)
            elif op == 3:
                linked_list.display()
            elif op == 4:
                print("Exiting program.")
                break
            else:
                print("Invalid choice. Please choose a valid option.")
        except ValueError:
            print("Invalid input. Please enter a number.")


if __name__ == "__main__":
    main()


// OUTPUT >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 1
Enter value to insert: 10
Inserted 10 into the linked list.

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 1
Enter value to insert: 20
Inserted 20 into the linked list.

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 1
Enter value to insert: 30
Inserted 30 into the linked list.

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 3
Linked List: 10 -> 20 -> 30 -> None

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 2
Enter value to delete: 20
Deleted 20 from the linked list.

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 3
Linked List: 10 -> 30 -> None

Linked List Operations:
1. Insert
2. Delete
3. Display
4. Exit
Choose an operation: 4
Exiting program.

=== Code Execution Successful ===
